【产品经理拉群组织程序员，当拿到需求文档之后，通知程序员干活。】

---------------代码实现思路---------------

角色划分(成两个类)
1.发布者Publisher
  -维护订阅者 this.observer = [];
  -增加/移除订阅者 add(xxx)和remove(xxx)
  -通知订阅者 notify()      //该方法内部会调用observer.update()
2.订阅者Observer
  -被通知 即被调用update()
  -去执行 即update()里面的代码

根据实际需求扩展这两个类
1.发布者PrdPublisher(extends Publisher)，新增：
  -初始化需求文档 this.prdState = null;
  -获取需求文档的方法 getState()
  -设置需求文档的方法 setState(prd)
2.订阅者DeveloperObserver(extends Observer)，重写update：
  -获取需求文档 publisher.getState()
  -调用工作函数 work()

----------------调用---------------------

//创建发布者(产品经理)
const hanMeiMei = new PrdPublisher()
//创建订阅者(程序员)
const A = new DeveloperObserver()
const B = new DeveloperObserver()
const C = new DeveloperObserver()
//需求文档
const prd = {
    ...
}

//产品经理开始拉群
hanMeiMei.add(A)
hanMeiMei.add(B)
hanMeiMei.add(C)
//产品经理发送了需求文档(状态改变)，内部自动通知程序员，所有程序员得到通知自动获取需求文档并工作
hanMeiMei.setState(prd)