/*
  给定单链表的头指针和要删除的指针节点，在O(1)时间内删除该节点
    1.要删除的节点是头节点
    2.要删除的节点是尾部节点
    3.要删除的节点既不是头部节点也不是尾部节点
    4.要删除的节点是链表当中唯一的节点

  分类：
    1.删除的节点不是尾部节点 - 将next节点覆盖当前节点
    2.删除的节点是尾部节点且等于头节点，只剩一个节点 - 将头节点置为null
    3.删除的节点是尾节点且前面还有节点 - 遍历到末尾的前一个节点删除

  修改之后的：（因为感觉作者的表达有问题）
    1.要删除的节点不是尾部节点 - 将next节点覆盖当前节点
    2.要删除的节点是尾部节点且等于头节点，即是唯一的一个节点 - 使这个节点为null 并且 使头节点head也为null(因为头节点有特殊的标识head，所以需要额外为其赋值）
    3.删除的节点是尾节点且前面还有节点 - 遍历到末尾的前一个节点删除
*/
var deleteNode = function(head, node){
  if(node.next){    //1
    node.val = node.next.val;
    node.next = node.next.next;     //???感觉有问题啊，这只处理了被删除节点的后两个节点。。。这样就行了！！！没有疑问了哈
  }else if(node===head){  //2
    node = null;
    head = null;
  }else{    //3
    node = head;
    while(node.next.next){    //当node后面还存在两个节点时
      node = node.next;
    }
    //当node后面只有一个节点了 时，即node是倒数第二个节点
    node.next = null;   //则删除最后一个节点
    node = null;        //并且也删除node节点，即也删除到数第二个节点？？？
  }
}

