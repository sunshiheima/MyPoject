//分治和归并排序的思想差不多，归并排序尚未弄清楚。。。所以这个尚且也看不懂思路

/*
  在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。
  输入一个数组，求出这个数组中的逆序对的总数P

  思路：
    解法一：使用暴力法：从第一个数开始，依次和后面每一个数字进行比较记录逆序对的个数，时间复杂度O(n2)
    解法二：使用分治的思想
      建议先熟悉归并排序算法再来看本题
      1.直接将归并排序进行改进，把数组分成N个小数组
      2.？？？合并数组left-mid，mid+1-right，合并时，若array[leftIndex]>array[rightIndex]，则比右边rightIndex-mid个数大
      3.count += rightIndex-mid

      注意和归并排序的区别：归并排序--合并数组时是从小数开始，而本题是从大数开始
      时间复杂度O(nlogn)，空间复杂度O(n)

*/