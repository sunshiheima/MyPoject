/*
  输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示

  分析：
    这是一道考察二进制的题目
    二进制或运算符(or)：符号为|，表示若两个二进制位都为0，则结果为0，否则为1
    二进制与运算符(and)：符号为&，表示若两个二进制位都为1，则结果为1，否则为0
    二进制否运算符(not)：符号为~，表示对一个二进制位取反
    异或运算符(xor)：符号为^，表示若二进制位不相同，则结果为1，否则为0
    左移运算符m<<n：表示把m左移n位，左移n位的时候，最左边的n位将被丢弃，同时在最右边补上n个0
    右移运算符m>>n：表示把m右移n位，右移n位的时候，最右边的n位将被丢弃，同时在最左边补上n个0

  我们可以让目标数字和一个数字做与运算
  这个数字必须只有一位是1其他位都为0，这样就可以知道数字的这一位是否位0（即如果做与运算结果为1的话，那么表示目标数字对应位为1；结果为0，则表示目标数字对应位为0）

  将用于比较的这个数字初始值为1，比较完之后让1左移一位，（并且每次做与运算之后如果结果为1的话就将计数器加1）
  这样就可以统计目标数字中1的个数了
*/
function NumberOf1(n){
  let flag = 1;
  let count = 0;
  while(flag){
    if(flag & n){     //条件判断当中：数字0会被隐式转换为false
      count ++;
    }
    flag = flag << 1;
  }
  return count;
}