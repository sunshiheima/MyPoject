注意：
    ES规范未规定各方法底层应该使用哪一种算法，故各个浏览器使用的算法不一样！

1.array.sort()
  （具体源码见Array源码710行开始：https://github.com/v8/v8/blob/ad82a40509c5b5b4680d4299c8f08d6c6d31af3c/src/js/array.js）
  当数组长度小于10的时候，用的是插入排序
  当数组长度大于10的时候，用的是快排，但是快排的基准数是专门选定的，因为基准数的选定会直接关系到快排的比较次数
  leetcode说其时间复杂度为O(nlogn)
  ------
  MDN：
    若没有指明比较函数：默认是先将元素转换为字符串，然后比较字符串各个字符的Unicode位点，来进行排序。
    若指明比较函数：那么数组会按照调用该数组的返回的返回值排序。若compare(a,b)的返回值小于0，则a会被排列到b之前；若等于0，则a和b的相对位置不变；若大于0，则b会被排列到a之前
    若数组包含的全为数字，需要对数组中元素进行排序，则可以将比较函数简化为compare(a, b){ return a-b; //将数组进行升序排序,反之则为降序排序}