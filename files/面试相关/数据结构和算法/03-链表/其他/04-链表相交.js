/*
题目：
    给定两个(单向)链表，判定它们是否相交并返回交点。【请注意相交的定义基于节点的引用，而不是基于值】
    换句话说，如果一个链表的第k个节点与两一个链表的第j个节点是同一节点（引用完全相同），则这两个链表相交
注意：
    区分【链表相交】和【找到两个链表相交的第一个节点】
思路：
    两个指针最多走过headA链表长度+headB链表长度的距离
    1.如果相交，会提前相遇在相交节点，此时返回相交节点
    2.如果不相交，则各自走过headA链表长度+headB链表长度的距离，指向null。此时返回null
注意：
    关于这个思路，如果两个链表相交，那么两个指针总能在headA长度+headB长度的步数之内相遇，
    我画图举例试过了，是这样的，但是不知道理论依据，我感觉这是一个数学问题唉~~~
*/

var getIntersectionNode = function (headA, headB) {
  var p1 = headA,
    p2 = headB;
  while (p1 != p2) {
    p1 = p1 ? p1.next : headB;
    p2 = p2 ? p2.next : headA;
  }
  return p1;
};
