平衡二叉树(AVL)：
是指【任意节点】的【左右子树高度差绝对值都不大于1】的    【二叉搜索树】

重！平衡二叉树的出现，是为了降低二叉搜索树的【查找】时间复杂度。
大家知道，对于同样一个遍历序列，二叉搜索树的造型可以有很多种。
即如果给出一个遍历序列，我们构造出的是平衡二叉树而非各种稀奇古怪的普通二叉树的话，在构造好的树中查找某个指定值的节点的时间复杂度会小很多！！！

二叉搜索树的妙处就在于它把“二分”这种思想以数据结构的形式表达了出来。
1.在一个构造合理的二叉搜索树里，我们可以通过对比当前结点和目标值之间的大小关系，缩小下一步的搜索范围（比如只搜索左子树或者只搜索右子树）
进而规避掉不必要的查找步骤，降低搜索过程的时间复杂度。
2.但是如果一个二叉搜索树严重不平衡
每一个结点的右子树都是空的，这样的结构非常不合理，它会带来高达O(N)的时间复杂度。
而平衡二叉树由于利用了二分思想，查找操作的时间复杂度仅为 O(logN)。

因此，为了保证二叉搜索树能够确实为查找操作带来效率上的提升，我们有必要在构造二叉搜索树的过程中维持其平衡度，这就是平衡二叉树的来由。

平衡二叉树的考察点：
对特性的考察（本节以平衡二叉树的判定为例）
对操作的考察（本节以平衡二叉树的构造为例）
