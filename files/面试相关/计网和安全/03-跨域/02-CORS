【CORS】—— 跨域资源共享

实现CORS之后，就允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。
CORS的实现需要浏览器和服务器同时支持。

1.浏览器和服务器如何实现CORS
目前基本所有浏览器已经支持该功能，IE浏览器不低于IE10即可。
并且整个CORS通信过程，都是浏览器自动完成，是不需要用户参与的。对于开发者来说，CORS通信与同源的AJAX通信没有差别，代码完全一样。

//浏览器内部是如何支持CORS的？
浏览器一旦发现AJAX请求跨源，就会自动添加 一些附加的头信息，有的时候还会多出一次附加的请求（这个过程用户感知不到）。
浏览器将【跨源AJAX请求分为两类】，浏览器对这两类请求的处理是不一样的。
1)简单请求
-请求方法是：HEAD/GET/POST
-无自定义请求头，HTTP的头信息不超出以下字段：Accept、Accept-Language、Content-Language、Last-Event-ID
-Content-Type(只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain)
浏览器会直接发出正式请求。并在请求头中，自动添加Origin字段以表明本次请求的来源(协议+域名+端口)
服务器会根据这个值，决定是否同意这次请求。

2)非简单请求
-不是简单请求，就是非简单请求
那么浏览器在正式请求之前，会做一次预检请求，使用的请求方式是OPTIONS。
用于询问服务器，当前网页所在的域名是否在服务器的许可名单中，以及可以使用哪些HTTP请求方法和头信息字段。
只有得到服务器的肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就会报跨域错误。

预检阶段：
//浏览器会在预检请求中，加入以下请求头字段（浏览器会根据我们发的XMLHttpRequest请求内容，自动帮我们完成）
Origin：请求的来源
Access-Control-Request-Method: 正式http请求将会用到的方法
Access-Control-Request-Headers：正式http请求会额外发送的头信息字段
//服务器响应中，加入以下响应头字段（需要服务器端自己配置）
Access-Control-Allow-Origin：服务端允许跨域地址来源（需跨域域名/星号）
注意：将此字段设置为*不安全，建议指定来源；并且设置为*后，后面正式请求时浏览器将不会发送Cookie（即使我们设置了也会被浏览器拦截）
Access-Control-Allow-Methods：服务端允许的跨域请求方法
Access-Control-Allow-Headers：服务端允许的请求头字段，不限于预检中Access- Control-Request-Headers包含的。
Access-Control-Allow-Credentials：表示允许正式请求时带上Cookie。该字段只能为true，如果服务器不要浏览器发送Cookie，删除该字段即可。
注意：默认情况下，CORS请求的正式请求不会自动带上Cookie。若需要带上，则首先需要预检请求时服务器响应中表示同意才行！服务器表示同意的字段就是该字段。
Access-Control-Max-Age：配置本次预检请求的有效期。
注意：单位为秒，如果在此期间你再次发送了这个接口请求，就不同发预检请求了，节省服务器资源。

//浏览器在正式请求中，加入头部字段Origin、我们代码中所指明的请求头
如果要带上Cookie，需要在xhr.send()之前写：xhr.withCredentials = true;
虽然浏览器默认不发送Cookie，但有的浏览器还是会一起发送Cookie，这时你也可以显式的关闭：xhr.withCredentials = false;

//服务器看正式请求的方法和请求头是否符合，一般只要预检请求能通过，正式请求也能通过。

-------------------------------------------

常见的跨域预检请求抛错：

1.OPTIONS 404 + "No 'Access-Control-Allow-Origin' header is present on the requested resource"
服务端没有设置允许 OPTIONS 请求

2.OPTIONS 405 + "No 'Access-Control-Allow-Origin' header is present on the requested resource"
服务端已经允许了 OPTIONS 请求，但是一些配置文件中（如安全配置）阻止了 OPTIONS 请求

3.OPTIONS 200 + "No 'Access-Control-Allow-Origin' header is present on the requested resource"
服务器端允许了 OPTIONS 请求，配置文件中也没有阻止，但是头部匹配时出现不匹配现象。
比如 Origin 头部检查不匹配，或者少了一些头部的支持。

4.OPTIONS 500 
服务端针对 OPTIONS 请求的代码出了问题，或者没有响应。







 



