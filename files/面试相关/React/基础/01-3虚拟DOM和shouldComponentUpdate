为什么虚拟dom会提高性能？
虚拟dom相当于在js和真实dom中间加了一个缓存，每次更新，都会对比新生成的虚拟dom和原来的虚拟dom，根据差异再对DOM树进行改动，这样就是实现了DOM树的最小改动！

shouldComponentUpdate函数：
用来判断是否需要 继续调用render以及之后的过程，render之后会有虚拟DOM的对比过程，以实现DOM树的最小改动。
但是计算虚拟DOM的差异是会消耗资源的，如果有办法使得连虚拟DOM的差异计算都不用执行就好了。
这就是shouldComponentUpdate的作用：当其返回false时，更新过程就终止，之后render不会执行了，自然也就避免了虚拟DOM的差异计算！
一般shouldComponentUpdate中的实现就是：对比nextProps和this.props，对比nextState和this.state
当然，如果我们能够在shouldComponentUpdate方法中写出更优化的dom diff算法，可以极大的优化性能！


