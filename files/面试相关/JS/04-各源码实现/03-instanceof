原理：
L.__proto__是否等于R.prototype，等于则返回true
不等于则再看L.__proto__.__proto__是否等于R.prototype，直到__proto__为null。

var instance_of = function (left, right) {
  var O = right.prototype;
  var left = left.__proto__;
  while (true) {
    if (left === null) return false;
    if (left === O) return true;
    left = left.__proto__;
  }
};
instance_of([], Array);


------------------------------------------

// L 表示左表达式，R 表示右表达式
function instance_of(L, R) {
  var O = R.prototype;
  L = L.__proto__;
  while (true) {
    if (L === null) return false;
    // 这里重点：当 O 严格等于 L 时，返回 true
    if (O === L) return true;
    L = L.__proto__;
  }
}

