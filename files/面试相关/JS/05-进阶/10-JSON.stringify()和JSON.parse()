JSON.stringify: 将JS对象转为JSON字符串
JSON.parse: 将JSON字符串转为一个JS对象

在使用JSON.parse()时需要注意：你的字符串必须符合JSON格式！即键值都必须使用双引号包裹！

JSON.stringify()和toString()的区别：
前者常用于对象，而后者常用于数字。
虽然toString()也可以将数组转为字符串，但是他回破坏数组原有的结构，例如：[1,2,[3,4],7,[[9]]] => "1,2,3,4,7,9"
而JSON.stringify()可以将数组转为字符串，且不会破坏数组原有的结构，例如：[1,2,[3,4],7,[[9]]] => "[1,2,[3,4],7,[[9]]]"，再使用JSON.parse()即可将还原数组！

--------------------------------------------------------

【具体应用】

1.判断数组是否包含某对象，或者判断对象是否相等。
//判断数组是否包含某对象
let data = [
    {name: "yf"},
    {name: "wyl}
]
let val = {name: "天子"};
JSON.stringify(data).indexOf(JSON.stringify(val)) !== -1;   //true

//判断两数组/对象是否相等
let a = [1,2,3];
let b = [1,2,3];
JSON.stringify(a) === JSON.stringify(b);        //true

---------------

2.让localStorage/sessionStorage可以存储对象
localStorage/sessionStorage默认只能存储字符串。所以若要存储对象，可以在存储签先使用JSON.stringify()将对象转为字符串。在将其从存储中取出是再配合JSON.parse()转回对象即可！
//存
function setLocalStorage(key, val){
    window.localStorage.setItem(key, JSON.stringify(val));
}
//取
function getLocalStorage(key){
    let val = JSON.parse(window.localStorage.getItem(key));
    return val;
}
//测试
setLocalStorage("demo", [1,2,3]);
let a = getLocalStorage("demo");    //[1,2,3]

---------------

3.实现对象深拷贝
//深拷贝
function deepClone(data){
    let _data = JSON.stringify(data);
    let dataClone = JSON.parse(_data);
    return dataClone;
}
//测试
let arr = [1,2,3];
let _arr = deepClone(arr);
arr[0] = 2;
console.log(arr, _arr);     //[2,2,3]  [1,2,3]

