栈是什么？
    栈是一种“操作受限”的线性表，只允许在一端插入和删除数据。最大的特点就是后进先出。
    当某个数据集合只涉及在一端插入和删除数据，并且满足后进先出、先进后出的特性，我们就应该首选“栈”这种数据结构。
    ------
    注：相比于数组和链表，栈带给我们的只有限制。
    但是，数据或链表暴露了太多的操作接口，操作上的确灵活自如，但使用时就比较不可控，自然也就容易出错。

栈的实现方式：
    1.用数组实现的栈 —— 顺序栈
    2.用链表实现的栈 —— 链式栈

栈的操作：
    主要包含两个操作
    1.入栈：在栈顶插入一个元素，时间复杂度是O(1)
    2.出栈：从栈顶删除一个元素，时间复杂度是O(1)

-----------------------------------------------------------------------------------------------------

栈在函数调用中的应用：
1.函数调用栈
  操作系统给每个线程分配了一块独立的内存空间，这块内存被组织成“栈”这样的结构，用来存储函数调用时的临时变量。
  每进入一个函数，就会将临时变量作为一个栈帧入栈，当被调用函数执行完成，返回之后，将这个函数对应的栈帧出栈。

2.编译器用栈来实现表达式求值（用了两个栈）
  编译器就是通过两个栈来实现的，其中是一个保存操作数的栈，另一个是保存运算符的栈。
  1.我们从左到右遍历表达式，当遇到数字，我们就直接压入操作数栈；当遇到运算符时，就与运算符栈的栈顶元素进行比较。
  2.如果比运算符栈顶元素的优先级高，就将当前运算符入栈
    如果比运算符栈顶元素的优先级低或者相同，就继续下面的步骤
  3.从运算符栈中取栈顶运算符，从操作数栈的栈顶元素取2个操作数，然后进行计算，再把计算完的结果压入操作数栈
  重复以上步骤知道两个栈为空！

3.借助栈来检查表达式中的括号是否匹配
  题目：假设表达式中只包括：()、[]、{}，并且它们可以任意嵌套。
       那现在给你一个包含三种括号的表达式字符串，如何检查它是否合法了？
  思路：
  1.我们用栈来保存未匹配的左括号，从左到右依次扫描字符串
  2.当扫描到左括号时，则将其压入栈中；当扫描到右括号时，从栈顶取出一个左括号
  3.如果能够匹配，比如(和)匹配，则继续扫描剩下的字符串
  4.如果扫描过程中，遇到不能配对的左括号，或者栈中没有数据，则说明为非法格式
    当所有的括号都扫描完成之后，如果栈为空，则说明字符串为合法格式
    否则，说明有未匹配的左括号，为非法格式

4.借助栈来实现浏览器的前进、后退功能（用了两个栈）
  我们使用两个栈，X和Y，我们把首次浏览的页面依次压入栈X
  1.当点击后退按钮时，再依次从栈X中出栈，并将出栈的数据依次放入栈Y
  2.当点击前进按钮时，我们依次从栈Y中取出数据，放入栈X中
  3.当栈X中没有数据时，那就说明没有页面可以继续后退浏览了
    当栈Y中没有数据时，那就说明没有页面可以点击前进按钮了
    注意:如果你通过页面b又跳转到新的页面d了，页面c就无法再通过前进、后退按钮重复查看了，所以需要清空栈Y

------------------------------------------------------------------------------------------------------



