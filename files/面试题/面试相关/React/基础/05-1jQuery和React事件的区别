以前(jQuery)：是把不同技术(HTML,CSS,JS)分开管理了，这不是逻辑上的分而治之。
现在(React): 根据做用一件事的代码应该有高耦合性的设计原则，将实现同一功能的代码都放在一个文件当中。

--------------------------------------

以前，在行内添加事件这种写法是为人诟病的。因为：
1.onclick添加的事件处理函数是在全局环境下执行的，这污染了全局环境，很容易产生意想不到的后果。
2.给很多DOM元素添加onclick事件，可能会影响网页的性能，毕竟，网页需要的事件处理函数越多，性能就会越低。
3.对于使用onclick的DOM元素，如果要动态的从DOM树中删掉的话，需要把对应的事件处理器注销掉
  假如忘了注销，就可能造成内存泄漏，这样的bug很难被发现。

而在在JSX中，我们正是通过onClick这样的方式给一个元素添加一个事件处理函数。
(其实JSX的onClick事件处理方式和HTML的onclick有很大不同)
1.onClick挂载的每个函数，都可以控制在组件范围内，不会污染全局空间。
2.我们在JSX中看到一个组件使用了onClick，但并没有使用onclick的HTML。
  ---------下面两行是重点！！！--------
  而是使用了事件委托的方式处理点击事件，无论有多少个onClick出现，其实最后都只在DOM树上添加了一个事件处理函数，挂在最顶层的DOM节点上。
  所有的点击事件都被这个事件处理函数捕获，然后根据具体组件分配给特定函数，使用事件委托的性能当然要比为每个onClick都挂载一个事件处理函数要高。
3.因为React控制了组件的生命周期，在unmount的时候自然能够清除相关的所有事件处理函数，内存泄漏也不再是一个问题。
-----------------------------------------



