1.今日目标
    1）2D变形（掌握）
    2）动画（掌握）
2.变形函数
    1）平移
        translateX()        //沿x轴平移
        translateY()        //沿y轴平移
        translate(x,y)      //沿x和y轴平移
    2）缩放
        scaleX()            //x轴缩放
        scaleY()            //y轴缩放
        scale()             //x和y轴同时缩放
    3）旋转
        rotateX()           //绕x轴旋转
        rotateY()           //绕Y轴旋转
        rotateZ()           //绕Z轴旋转
        rotate()            //绕Z轴旋转
    4）斜切
        skewX()             //沿x轴扭曲
        skewY()             //沿y轴扭曲
        skew(x,y)           //x和y同时扭曲
3.设置对象原点
    transform-origin(x,y)   //x横坐标 y纵坐标
4.定义动画
    from-to
        @keyframes 动画名{
            from{
                //自定义样式
            }
            to{
                //自定义样式
            }
        }
    百分比
        @keyframes 动画名{
            0%{
                //0%的样式
            }
            20%{
                //20%的样式
            }
            40%{
                //40%的样式
            }
            60%{
                //60%的样式
            }
            80%{
                //80%的样式
            }
            100%{
                //100%的样式
            }
        }

5.执行动画
    animation:动画名 执行时间 过度函数 延迟;
6.动画属性
    animation:animation-name  animation-duration  animation-timing-function animation-delay
              animation-iteration-count  animation-direction animation-fill-mode animation-play-state  
        
        animation-name：动画名
        animation-duration：执行时间（多少s）
        animation-timing-function：过度函数（linear ease ...）
        animation-delay: 延迟时间（多少s）
        animation-iteration-count：播放次数 infinite(无限循环)
        animation-direction:播放方向（正向或者反向）
            normal默认值（正向）
            reverse（反向）
            alternate（1，3，5...奇数次正向，偶数次反向）
            alternate-reverse(奇数次反向，偶数次正向))
        animation-fill-mode: 动画停留的样式
            none（默认）动画在动画执行之前和之后不会应用任何样式到目标素。
            forwards 动画结束后保留结束时的样式
            backwards   动画开始时应用from或者0%的样式
            both forwards和backwards的复合
        animation-play-state：暂停或者播放
            paused 暂停
            running 播放
7.监听动画事件
    1)animationstart  动画开始事件
    2)animationend    动画结束事件
    3)animationiteration   循环事件  

在移动端开发中，直接使用transition动画会让页面变慢甚至卡顿。
所以我们通常添加transform:translate3D(0,0,0)或transform:translateZ(0)来开启移动端动画的GPU加速，让动画过程更加流畅。
